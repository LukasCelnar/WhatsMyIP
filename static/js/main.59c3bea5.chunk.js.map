{"version":3,"sources":["components/SearchIP.js","components/App.js","index.js"],"names":["SearchIP","inputValue","useState","data","setData","containerHeight","setContainerHeight","ref","useRef","useEffect","a","axios","get","response","current","offsetHeight","FetchData","id","className","ip","country_name","region_name","city","zip_code","time_zone","latitude","longitude","title","width","height","src","frameBorder","scrolling","marginHeight","marginWidth","App","currentInputValue","setCurrentInputValue","setInputValue","style","textAlign","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","marginRight","ReactDOM","render","document","querySelector"],"mappings":"iRAqFeA,G,MAjFE,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,WAAgB,EAERC,mBAAS,IAFD,mBAEzBC,EAFyB,KAEnBC,EAFmB,OAGcF,mBAAS,IAHvB,mBAGzBG,EAHyB,KAGRC,EAHQ,KAK1BC,EAAMC,iBAAO,IAcnB,OAXAC,qBAAU,YACS,uCAAG,4BAAAC,EAAA,sEACSC,IAAMC,IAAN,qCAAwCX,GAA0B,KAD3E,cACRY,EADQ,gBAERT,EAAQS,EAASV,MAFT,uBAGRG,EAAmBC,EAAIO,QAAQC,cAHvB,2CAAH,qDAMfC,KAED,CAACf,IAGA,yBAAKgB,GAAG,UAAUC,UAAU,cACxB,yBAAKD,GAAG,OAAOV,IAAKA,EAAKW,UAAU,2BAC/B,yBAAKA,UAAU,QACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,UAAUjB,EAAa,MAAQ,YAC7CE,EAAKgB,KAGd,yBAAKD,UAAU,QACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,UAAf,YACCf,EAAKiB,eAGd,yBAAKF,UAAU,QACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,UAAf,WACCf,EAAKkB,cAGd,yBAAKH,UAAU,QACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,UAAf,SACCf,EAAKmB,OAGd,yBAAKJ,UAAU,QACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,UAAf,aACCf,EAAKoB,WAGd,yBAAKL,UAAU,QACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,UAAf,cACCf,EAAKqB,YAGd,yBAAKN,UAAU,QACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,UAAf,aACCf,EAAKsB,WAGd,yBAAKP,UAAU,QACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,UAAf,cACCf,EAAKuB,aAKlB,yBAAKT,GAAG,MAAMC,UAAU,YACpB,yBAAKA,UAAU,eACX,4BAAQS,MAAM,aAAaC,MAAM,OAAOC,OAAQxB,EAAkB,KAAMY,GAAG,cAAca,IAAG,yCAAoC3B,EAAKsB,SAAzC,iBAA0DtB,EAAKuB,UAA/D,uCAA+GK,YAAY,IAAIC,UAAU,KAAKC,aAAa,IAAIC,YAAY,WC3C5QC,G,MA/BH,WAAM,MAEoCjC,mBAAS,iBAF7C,mBAEPkC,EAFO,KAEYC,EAFZ,OAGsBnC,mBAAS,iBAH/B,mBAGPD,EAHO,KAGKqC,EAHL,KAWd,OACI,yBAAKC,MAAO,CAACC,UAAW,WACpB,qCACA,kBAAC,EAAD,MACA,qDACA,0BAAMC,SAVO,SAACC,GAClBA,EAAEC,iBACFL,EAAcF,IAQoBlB,UAAU,YACpC,2BACA0B,KAAK,OACLC,YAAY,kBACZC,MAAOV,EACPW,SAAU,SAACL,GAAD,OAAOL,EAAqBK,EAAEM,OAAOF,QAC/CP,MAAO,CAACU,YAAa,YAErB,4BAAQ/B,UAAU,mBAAlB,WAEJ,kBAAC,EAAD,CAAUjB,WAAYA,EAAYqC,cAAeA,OCzB7DY,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.59c3bea5.chunk.js","sourcesContent":["import React, {useEffect, useState, useRef} from 'react';\r\nimport axios from 'axios';\r\nimport './SearchIP.css';\r\n\r\nconst SearchIP = ({ inputValue}) => {\r\n    // States\r\n    const [data, setData] = useState('');\r\n    const [containerHeight, setContainerHeight] = useState('');\r\n    // Refs\r\n    const ref = useRef('');\r\n\r\n    // Run this when Search.js is initialized or when prop inputValue changes\r\n    useEffect(() => {\r\n        const FetchData = async () => {\r\n            const response = await axios.get(`https://freegeoip.app/json/${inputValue ? inputValue : ''}`);\r\n            await setData(response.data);\r\n            await setContainerHeight(ref.current.offsetHeight);\r\n        }\r\n\r\n        FetchData();\r\n\r\n    }, [inputValue]);\r\n\r\n    return (\r\n        <div id=\"segment\" className=\"ui segment\">\r\n            <div id=\"list\" ref={ref} className=\"ui relaxed divided list\">\r\n                <div className=\"item\">\r\n                    <div className=\"content\">\r\n                        <div className=\"header\">{inputValue ? \"IP:\" : \"Your IP:\"}</div>\r\n                        {data.ip}\r\n                    </div>\r\n                </div>\r\n                <div className=\"item\">\r\n                    <div className=\"content\">\r\n                        <div className=\"header\">Country:</div>\r\n                        {data.country_name}\r\n                    </div>\r\n                </div>\r\n                <div className=\"item\">\r\n                    <div className=\"content\">\r\n                        <div className=\"header\">Region:</div>\r\n                        {data.region_name}\r\n                    </div>\r\n                </div>\r\n                <div className=\"item\">\r\n                    <div className=\"content\">\r\n                        <div className=\"header\">City:</div>\r\n                        {data.city}\r\n                    </div>\r\n                </div>\r\n                <div className=\"item\">\r\n                    <div className=\"content\">\r\n                        <div className=\"header\">ZIP Code:</div>\r\n                        {data.zip_code}\r\n                    </div>\r\n                </div>\r\n                <div className=\"item\">\r\n                    <div className=\"content\">\r\n                        <div className=\"header\">Time Zone:</div>\r\n                        {data.time_zone}\r\n                    </div>\r\n                </div>\r\n                <div className=\"item\">\r\n                    <div className=\"content\">\r\n                        <div className=\"header\">Latitude:</div>\r\n                        {data.latitude}\r\n                    </div>\r\n                </div>\r\n                <div className=\"item\">\r\n                    <div className=\"content\">\r\n                        <div className=\"header\">Longitude:</div>\r\n                        {data.longitude}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"map\" className=\"mapouter\">\r\n                <div className=\"gmap_canvas\">\r\n                    <iframe title=\"Google Map\" width=\"100%\" height={containerHeight + \"px\"} id=\"gmap_canvas\" src={`https://maps.google.com/maps?q=${data.latitude}%2C%20${data.longitude}&t=&z=7&ie=UTF8&iwloc=&output=embed`} frameBorder=\"0\" scrolling=\"no\" marginHeight=\"0\" marginWidth=\"0\"></iframe>\r\n                </div>   \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchIP;","import React, {useState} from 'react';\r\nimport SearchIP from './SearchIP';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n    // States with sample IP adress\r\n    const [currentInputValue, setCurrentInputValue] = useState('69.171.250.35')\r\n    const [inputValue, setInputValue] = useState('69.171.250.35')\r\n\r\n    // Run this when user submits form\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault()\r\n        setInputValue(currentInputValue)\r\n    }\r\n\r\n    return (\r\n        <div style={{textAlign: \"center\"}}>\r\n            <h1>My IP</h1>\r\n            <SearchIP />\r\n            <h1>Search with IP Adress</h1>\r\n            <form onSubmit={onFormSubmit} className=\"ui input\">\r\n                <input \r\n                type=\"text\" \r\n                placeholder=\"Enter IP Adress\" \r\n                value={currentInputValue}\r\n                onChange={(e) => setCurrentInputValue(e.target.value)} \r\n                style={{marginRight: \"0.7rem\"}}\r\n                />\r\n                <button className=\"ui basic button\">Search</button>\r\n            </form>\r\n            <SearchIP inputValue={inputValue} setInputValue={setInputValue} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\n// Render App component\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}